// app/components/Header.tsx
"use client";

import React, { useState } from "react";
import Link from "next/link"; 
import { useAuth } from '../../hooks/useAuth'; // Import useAuth
import LogoutButton from './LogoutButton'; // Import your new LogoutButton

export default function Header() {
  const [isDropdownOpen, setIsDropdownOpen] = useState(false);
  const { isAuthenticated } = useAuth(); // Use useAuth here

  const categories = [ /* ... your categories array ... */ ];

  return (
    <header className="bg-blue-950 text-gray-100 p-4 shadow-md sticky top-0 z-50 font-sans">
      <div className="max-w-7xl mx-auto flex items-center justify-between relative px-8">
        {/* Left: Logo */}
        <div className="flex-shrink-0 min-w-fit">
          <a href="/" className="text-3xl font-bold text-blue-400 hover:text-blue-300 transition-colors duration-300">
            Grand RP Values
          </a>
        </div>

        {/* Center: Home button */}
        <div className="absolute left-1/2 transform -translate-x-1/2">
          <a href="/" className="text-lg md:text-xl font-semibold px-5 py-2 rounded-full bg-white/10 text-white hover:bg-white/20 transition-all duration-300 whitespace-nowrap" onClick={() => setIsDropdownOpen(false)}>
            Home
          </a>
        </div>

        {/* Right: Categories dropdown and Logout Button */}
        <div className="flex-shrink-0 relative flex items-center gap-4"> {/* Added flex and gap */}
          <button
            onClick={() => setIsDropdownOpen(!isDropdownOpen)}
            className="px-4 py-2 rounded-lg bg-blue-900 hover:bg-blue-800 text-white font-semibold transition duration-200 flex items-center gap-2 shadow-sm text-sm md:text-base"
          >
            <span>Categories</span>
            <svg /* ... svg icon ... */ />
          </button>
          {isDropdownOpen && (
            <div className="absolute right-0 top-14 mt-2 py-2 w-56 bg-blue-900 rounded-lg shadow-xl border border-blue-700 z-50">
              {categories.map((category) => (
                <Link key={category.name} href={category.path} className="block px-4 py-2 text-sm md:text-base text-gray-100 hover:bg-blue-700 hover:text-white transition-colors duration-300" onClick={() => setIsDropdownOpen(false)}>
                  {category.name}
                </Link>
              ))}
            </div>
          )}

          {/* Render LogoutButton only if authenticated */}
          {isAuthenticated && <LogoutButton />} 
        </div>
      </div>
    </header>
  );
}